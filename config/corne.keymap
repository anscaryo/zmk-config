/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_9 &kp KP_NUMBER_1>,
                <&macro_release>,
                <&kp RIGHT_ALT &kp LS(T) &kp Y &kp P &kp E &kp SPACE &kp S &kp O &kp M &kp E &kp T &kp H &kp I &kp N &kp G &kp DOT &kp DOT &kp DOT>;

            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB        |  Q  |  W  |  E  |  R  |  T  |        |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | LSHIFT/CAPS |  A  |  S  |  D  |  F  |  G  |        |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | LCTRL       |  Z  |  X  |  C  |  V  |  B  |        |  N  |  M   |  ,  |  .  |  /  | ENT  |
            //                              | GUI | LWR | SPC |  | SPC | RSE  | RALT |

            bindings = <
&kp TAB                  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&mt LEFT_SHIFT CAPSLOCK  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL                &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                                       &kp LGUI  &mo 1  &kp SPACE    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |         |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |  F1 |  F2 |  F3 |  F4 |  F5 |  F6 |         | LFT | DWN |  UP | RGT |     |      |
            // |  F7 |  F8 |  F9 | F10 | F11 | F12 |         |  {  |  [  |  ]  |  }  |     | RSHIFT |
            //                     | GUI |     | SPC |     | ENT | MO3 | ALT |

            bindings = <
&kp ESCAPE  &kp N1  &kp N2  &kp N3    &kp N4   &kp N5       &kp N6                &kp N7                           &kp N8                           &kp N9        &kp N0         &kp BSPC
&kp F1      &kp F2  &kp F3  &kp F4    &kp F5   &kp F6       &kp LEFT              &kp DOWN                         &kp UP                           &kp RIGHT     &trans         &kp ASTERISK
&kp F7      &kp F8  &kp F9  &kp F10   &kp F11  &kp F12      &kp RA(SINGLE_QUOTE)  &mt RA(KP_NUMBER_9) KP_NUMBER_1  &mt RA(KP_NUMBER_9) KP_NUMBER_3  &kp RA(NUHS)  &kp RA(GRAVE)  &kp RIGHT_SHIFT
                            &kp LGUI  &trans   &kp SPACE    &kp RET               &mo 3                            &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB  |  !  |  @  |  #  |  $  |  %  |       |  ^   |   &   |   *   |  (  |  )  | BKSP |
            // | LSHFT |     |     |     |     |     |       | HOME | PG-DN | PG_UP | END |  \  |  `   |
            // | LCTRL |  <  |  >  |     |     |     |       |   _  |   +   |   {   |  }  | "|" |  ~   |
            //                       | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp EXCL    &kp AT    &kp HASH      &kp DLLR           &kp PRCNT     &kp CARET  &kp AMPS           &kp ASTRK  &kp LPAR       &kp RPAR       &kp SQT
&kp LEFT_SHIFT  &trans      &trans    &trans        &kp K_VOLUME_UP    &trans        &kp HOME   &kp PAGE_DOWN      &kp PG_UP  &kp END        &kp BSLH       &kp GRAVE
&kp LCTRL       &new_macro  &kp NUBS  &trans        &kp K_VOLUME_DOWN  &kp C_MUTE    &kp NUHS   &kp RIGHT_BRACKET  &kp SLASH  &kp LS(EQUAL)  &kp LS(MINUS)  &kp LS(GRAVE)
                                      &kp LEFT_ALT  &mo 3              &kp SPACE     &kp RET    &trans             &kp DEL
            >;
        };

        bluethooth {
            bindings = <
&out OUT_TOG  &trans        &trans           &trans           &trans           &trans             &trans  &trans  &trans  &trans  &trans  &bootloader
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &trans  &trans  &trans  &trans  &trans  &trans
&kp RCTRL     &trans        &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG    &trans  &trans  &trans  &trans  &trans  &mkp LCLK
                                             &trans           &trans           &trans             &trans  &trans  &trans
            >;

            label = "3";
        };
    };
};
