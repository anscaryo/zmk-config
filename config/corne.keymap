/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include "keys_es.h"



/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB        |  Q  |  W  |  E  |  R  |  T  |        |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | LSHIFT/CAPS |  A  |  S  |  D  |  F  |  G  |        |  H  |  J   |  K  |  L  |  Ñ  |  ´   |
            // | LCTRL       |  Z  |  X  |  C  |  V  |  B  |        |  N  |  M   |  ,  |  .  |  /  | ENT  |
            //                              | GUI | LWR | SPC |  | SPC | RSE  | RALT |

            bindings = <
&kp TAB                  &kp ES_Q  &kp ES_W  &kp ES_E     &kp ES_R  &kp ES_T        &kp ES_Y      &kp ES_U  &kp ES_I      &kp ES_O    &kp ES_P     &kp BSPC
&mt LEFT_SHIFT CAPSLOCK  &kp ES_A  &kp ES_S  &kp ES_D     &kp ES_F  &kp ES_G        &kp ES_H      &kp ES_J  &kp ES_K      &kp ES_L    &kp ES_N_TILDE  &kp SQT
&kp LCTRL                &kp ES_Z  &kp ES_X  &kp ES_C     &kp ES_V  &kp ES_B        &kp ES_N      &kp ES_M  &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                                       &kp LGUI  &mo 1  &kp ES_SPACE    &kp ES_SPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |         |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |  F1 |  F2 |  F3 |  F4 |  F5 |  F6 |         | LFT | DWN |  UP | RGT |  ^  |   *  |
            // |  F7 |  F8 |  F9 | F10 | F11 | F12 |         |  {  |  [  |  ]  |  }  |   \  | RSHIFT |
            //                     | GUI |     | SPC |     | ENT | MO3 | ALT |

            bindings = <
&kp ESCAPE  &kp ES_N1  &kp ES_N2  &kp ES_N3    &kp ES_N4   &kp ES_N5            &kp ES_N6   &kp ES_N7      &kp ES_N8      &kp ES_N9        &kp ES_N0         &kp DEL
&kp F1      &kp F2     &kp F3     &kp F4       &kp F5      &kp F6               &kp LEFT    &kp DOWN       &kp UP         &kp RIGHT        &kp ES_GRAVE      &kp LS(KP_PLUS)
&kp F7      &kp F8     &kp F9     &kp F10      &kp F11     &kp F12              kp ES_LBRC  &kp ES_LBKT    &kp ES_RBKT    &kp ES_RBRC      &kp ES_BSLH       &kp RIGHT_SHIFT
                            &kp LGUI  &trans   &kp SPACE    &kp RET               &mo 3       &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB  |  !  |  @  |  #  |  $  |  %  |       |  ^   |   &   |   *   |  (  |  )  | BKSP |
            // | LSHFT |     |     |     |     |     |       | HOME | PG-DN | PG_UP | END |  \  |  `   |
            // | LCTRL |  <  |  >  |     |     |     |       |   _  |   +   |   {   |  }  | "|" |  ~   |
            //                       | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp ES_EXCL  &kp AT        &kp HASH      &kp DLLR           &kp PRCNT     &kp CARET  &kp AMPS           &kp ASTRK  &kp LPAR       &kp RPAR       &kp SQT
&kp LEFT_SHIFT  &none     &none         &none         &kp K_VOLUME_UP    &none         &kp HOME   &kp PAGE_DOWN      &kp PG_UP  &kp END        &kp BSLH       &kp GRAVE
&kp LCTRL       &kp ES_LT  &kp ES_GT  &none         &kp K_VOLUME_DOWN  &kp C_MUTE    &kp NUHS   &kp RIGHT_BRACKET  &kp SLASH  &kp LS(EQUAL)  &kp LS(MINUS)  &kp LS(GRAVE)
                                        &kp LEFT_ALT  &mo 3              &kp SPACE     &kp RET    &trans             &kp DEL
            >;
        };

        bluethooth {
            bindings = <
&out OUT_TOG  &trans        &trans           &trans           &trans           &bt BT_CLR_ALL     &kp PRINTSCREEN  &trans  &trans  &trans  &trans     &bootloader
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &trans           &trans  &trans  &trans  &trans     &trans
&kp RCTRL     &trans        &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG    &trans           &trans  &trans  &trans  &mkp LCLK  &mkp RCLK
                                             &trans           &trans           &trans             &trans           &trans  &trans
            >;

            label = "3";
        };
    };
};
